#pragma once

/*
	Any texture that needs to be loaded should be added here.
	Manages the SRV Heap offset when used in the texture loading process.
	ONLY ADD AS MANY TEXTURES THAT YOU ARE GONNA LOAD!!
	Must mirror texture count
*/

enum TextureDescriptions
{
	TEST_ATLAS_00,
	ANIM_TEST_ALTAS_00,
	TEST_BG_00,
	BK_UI_ATLAS_00,
	TROPICS_TESTMAP_00,
	TEXTURE_COUNT
};

enum FontDescriptions
{	
	//Default, Testing Fonts
	//DO NOT REMOVE
	CALIBRI_12,
	CALIBRI_14,
	CALIBRI_16,
	CALIBRI_18,
	CALIBRI_20,
	CALIBRI_22,
	//User Fonts Below This Point
	EXPRESSION_PRO_20,
	EXPRESSION_PRO_24,
	EXPRESSION_PRO_28,
	EXPRESSION_PRO_32,
	EXPRESSION_PRO_36,
	ALAGARD_SHARP_16,
	ALAGARD_SHARP_18,
	ALAGARD_SHARP_20,
	ALAGARD_SHARP_22,
	ALAGARD_SHARP_24,
	FONT_COUNT
};

//Measured count of required heap resources
const int RESOURCE_HEAP_RESERVE_COUNT = TextureDescriptions::TEXTURE_COUNT + FontDescriptions::FONT_COUNT;
//Un-measured reservation count, change as needed (this replaces the need to define texture descriptions if doing this)
const int RESOURCE_HEAP_RESERVE_STANDARD = 100;


///////////////////////
/// Default Texture ///
/// DO NOT REMOVE!! ///
/// ///////////////////

enum TestingTexture00Desc
{
	CHECKER_BOX_1024x1024,
	CHECKER_BOX_512x512,
	CHECKER_BOX_256x256,
	CHECKER_BOX_128x128,
	CHECKER_BOX_64x64,
	CHECKER_BOX_32x32,
	CHECKER_BOX_16x16,
	CHECKER_BOX_8x8,
	EMPTY_FRAME,
	FRAME_COUNT
};

enum BKUIBundle00Desc
{
	BK_UI_BLUE_00_CURV_512x512,
	BK_UI_BLUE_00_SQ_512x512,
	BK_UI_RED_00_CURV_512x512,
	BK_UI_RED_00_SQ_512x512,
	BK_UI_BLUE_00_COMP_02_256x256,
	BK_UI_BLUE_00_COMP_07_256x256,
	BK_UI_RED_00_COMP_02_256x256,
	BK_UI_RED_00_COMP_07_256x256,
	BK_UI_BLUE_00_COMP_05_256x128,
	BK_UI_RED_00_COMP_05_256x128,
	BK_UI_BLUE_00_CURV_256x256,
	BK_UI_BLUE_00_SQ_256x256,
	BK_UI_RED_00_CURV_256x256,
	BK_UI_RED_00_SQ_256x256,
	BK_UI_BLUE_00_CURV_256x64,
	BK_UI_BLUE_00_SQ_256x64,
	BK_UI_RED_00_CURV_256x64,
	BK_UI_RED_00_SQ_256x64,
	BK_UI_BLUE_00_CURV_256x32,
	BK_UI_BLUE_00_COMP_01_128x256,
	BK_UI_BLUE_00_COMP_06_128x256,
	BK_UI_BLUE_00_CURV_64x64,
	BK_UI_BLUE_00_SQ_64x64,
	BK_UI_RED_00_CURV_64x64,
	BK_UI_RED_00_SQ_64x64,
	BK_UI_BLUE_TILE_HIGHLIGHT_00_48x48,
	BK_UI_RED_00_COMP_01_128x256,
	BK_UI_RED_TILE_HIGHLIGHT_00_48x48,
	BK_UI_RED_00_CURV_256x32,
	BK_UI_RED_00_COMP_06_128x256,
	BK_UI_BLUE_00_COMP_00_128x128,
	BK_UI_BLUE_00_COMP_04_128x128,
	BK_UI_RED_00_COMP_00_128x128,
	BK_UI_BLUE_00_COMP_03_128x64,
	BK_UI_RED_00_COMP_04_128x128,
	BK_UI_TILE_CURSOR_00,
	BK_UI_PF_TRACK_00_48x48,
	BK_UI_PF_TRACK_01_48x48,
	BK_UI_PF_TRACK_02_48x48,
	BK_UI_PF_TRACK_03_48x48,
	BK_UI_PF_TRACK_04_48x48,
	BK_UI_RED_00_COMP_03_128x64,
	BK_UI_BLUE_00_CURV_64x32,
	BK_UI_BLUE_00_CURV_128x128,
	BK_UI_BLUE_00_SQ_64x32,
	BK_UI_BLUE_00_SQ_128x128,
	BK_UI_RED_00_CURV_128x128,
	BK_UI_RED_00_SQ_128x128,
	BK_UI_BLUE_00_CURV_128x64,
	BK_UI_BLUE_00_HIGHLIGHT_01_128x64,
	BK_UI_BLUE_CURV_128x32,
	BK_UI_BLUE_00_SQ_128x64,
	BK_UI_RED_00_CURV_128x64,
	BK_UI_RED_00_HIGHLIGHT_00_128x64,
	BK_UI_RED_00_SQ_128x64,
	BK_UI_BLUE_00_HIGHLIGHT_01_128x32,
	BK_UI_BLUE_00_SQ_128x32,
	BK_UI_HIGHLIGHT_00_128x32,
	BK_UI_RED_00_CURV_128x32,
	BK_UI_RED_00_HIGHLIGHT_00_128x32,
	BK_UI_PF_TRACK_05_48x48,
	BK_UI_PF_TRACK_06_48x48,
	BK_UI_PF_TRACK_07_48x48,
	BK_UI_RED_00_SQ_128x32,
	BK_UI_RED_00_CURV_64x32,
	BK_UI_RED_00_SQ_64x32,
	BK_UI_PF_TRACK_08_48x48,
	BK_UI_PF_TRACK_09_48x48,
	BK_UI_BUNDLE_00_COUNT
};


/////////////////////////////////////////
/// User Defined Texture Descriptions ///
/////////////////////////////////////////

enum class Weapon00Desc : unsigned
{
	//Animations
	BOMB_EXP_00 = 0,
	BOMB_IDLE_00,
	AURA_00,
	BOMB_EXP_EFFECT_00,
	FLYING_DAGGER_00,
	HEX_ACTIVE,
	HEX_DESPAWN,
	HEX_SPAWN,
	WHIP_00,
	//Frames
	AXE_00 = 63,
	BOOK_00,
	BULLET_00,
	BULLET_01,
	BULLET_02,
	CROSS_00,
	CROSS_01,
	DAGGER_00,
	WHIP_01,
	COUNT
};

//Divided by folder/filter
enum class GameUI00Desc : unsigned
{
	//Icons
	ARMOUR_ICON_00,
	AURA_ICON_00,
	BOMB_ICON_00,
	BOOK_ICON_00,
	BOOTS_ICON_00,
	BULLET_HELL_ICON_00,
	CROSS_ICON_00,
	FOCUS_ICON_00,
	HEX_STEP_ICON_00,
	HOH_ICON_00,
	MAGNIFIER_ICON_00,
	NECKLACE_ICON_00,
	POTION_ICON_00,
	MAGNETIC_RING_ICON_00,
	SWORD_ICON_00,
	SWORD_ICON_01,
	THROWING_GUARD_ICON_00,
	TIME_ACCEL_ICON_00,
	TIME_DECEL_ICON_00,
	WATER_DRAGON_ICON_00,
	WHIP_ICON_00,
	WIZARD_HAT_00,

	//Images
	CAVE_ICON_00,
	CAVE_ICON_01,
	GRASSLAND_ICON_00,
	GRASSLAND_ICON_01,
	GUNNER_PORTRAIT_00,
	GUNNER_PORTRAIT_01,
	KNIGHT_PORTRAIT_00,
	KNIGHT_PORTRAIT_01,
	MAGE_PORTRAIT_00,
	MAGE_PORTRAIT_01,
	
	//Other
	BUTTON_00_DEFAULT,
	BUTTON_00_DOWN,
	BUTTON_00_HOVER,
	COIN_00,
	COIN_01,
	COIN_02,
	COIN_03,
	COIN_04,
	EXPERIENCE_GEM_00,
	EXPERIENCE_GEM_01,
	EXPERIENCE_GEM_02,
	FOOD_00,
	HEALTH_BAR_HEART_00,
	LOOT_CHEST_00,
	MAGNET_ITEM_00,
	SUPER_ITEM_00,

	//UI Frames
	ABILITY_BAR_INNER_00,
	COMPOSITE_FRAME_00,
	COMPOSITE_FRAME_01,
	EXPERIENCE_FRAME_INNER_00,
	EXPERIENCE_FRAME_OUTER_00,
	FNP_ABILITY_BAR_00,
	FNP_BG_BAR_00,
	FNP_HEALTH_BAR_00,
	GOLD_FRAME_00,
	GOLD_FRAME_01,
	GOLD_FRAME_02,
	GOLD_FRAME_03,
	GOLD_FRAME_04,
	GOLD_FRAME_05,
	HEALTH_BAR_INNER_00,
	HEALTH_BAR_OUTER_00,
	INVENTORY_FRAME_00,
	INVENTORY_FRAME_01,
	INVENTORY_FULL_BLANK,
	INVENTORY_FULL_FILLED,
	MENU_ENTRY_00,
	MENU_ENTRY_01,
	SILVER_FRAME_00,
	SILVER_FRAME_01,
	SILVER_FRAME_02,
	SILVER_FRAME_03,

	COUNT
};